var accessToken = context.HttpContext.GetTokenAsync("access_token").GetAwaiter().GetResult();
string identityServerBaseUrl = _configuration.GetValue<string>("Swagger:IdentityServerBaseUrl");
string apiName = _configuration.GetValue<string>("Swagger:OidcApiName");
string apiSecret = _configuration.GetValue<string>("Swagger:ApiSecret");
var disco = _httpClient.GetDiscoveryDocumentAsync(identityServerBaseUrl).GetAwaiter().GetResult();
// /connect/introspect
var result = _httpClient.IntrospectTokenAsync(new TokenIntrospectionRequest
{
    Address = disco.IntrospectionEndpoint,
     // this is your APi Resource name
    ClientId = apiName,
    // this is your APi resource secret
    ClientSecret = apiSecret,
    Token = accessToken
}).GetAwaiter().GetResult();

if (result.IsError || !result.IsActive)
{
    context.Result = new ForbidResult();
    Console.WriteLine($"token校验失败: IsActive:\"{result.IsActive}\"; Error:\"{result.Error}\"");
    return;
}