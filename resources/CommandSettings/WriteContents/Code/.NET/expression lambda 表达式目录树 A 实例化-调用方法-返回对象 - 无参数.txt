var XType = typeof(DynamicParameters);

var result = Expression.Variable(XType, "result");
var init = Expression.Assign(result, Expression.New(XType));

var XMethod = XType.GetMethod("XMethodName", new Type[] { typeof(string), typeof(object), typeof(DbType?), typeof(ParameterDirection?), typeof(int?) }) ?? throw new Exception($"{type.Name}没有找到Add方法");
var call = Expression.Call(result, XMethod, Expression.Constant("1"), Expression.Constant("1111"), Expression.Default(typeof(DbType?)), Expression.Default(typeof(ParameterDirection?)), Expression.Default(typeof(int?)));

var returnLabel = Expression.Label(XType);

var returnExpression = Expression.Return(returnLabel, result, XType);

var returnLableTarget = Expression.Label(returnLabel, result);

var block = Expression.Block(new[] { result }, init, call, returnExpression, returnLableTarget);
var lambda = Expression.Lambda<Func<DynamicParameters>>(block).Compile();