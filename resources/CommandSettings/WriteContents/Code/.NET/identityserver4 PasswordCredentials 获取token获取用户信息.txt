string authority = "https://identityserverhost.com";
string clientId = "xxx";
string clientSecret = "xxx";
string scope = "openid profile";
string userName = "xxx";
string password = "xxx";

using HttpClient client = clientFactory.CreateClient();
string mediaType = "application/x-www-form-urlencoded";
string bodyContent = $"client_id={clientId}&client_secret={clientSecret}&scope={scope}&grant_type=password&username={username}&password={password}";
HttpContent parameters = new StringContent(bodyContent, Encoding.UTF8, mediaType);
var response = await client.PostAsync($"{authority}/connect/token", parameters);
var tokenInfo = await response.Content.ReadAsStringAsync();
var tokenObj = JsonConvert.DeserializeObject<JObject>(tokenInfo);
var accessToken = tokenObj["access_token"]?.ToString();
if (string.IsNullOrWhiteSpace(accessToken))
{
    return new GoViewDataReturn
    {
        Code = 400,
        Msg = "账号或密码错误"
    };
}

var expireIn = Convert.ToInt32(tokenObj["expires_in"]);

client.DefaultRequestHeaders.Authorization = new Sys.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
var userinfoResponse = await client.GetAsync($"{authority}/connect/userinfo");
var userinfoJson = await userinfoResponse.Content.ReadAsStringAsync();
var userinfo = JsonConvert.DeserializeObject<JObject>(userinfoJson);